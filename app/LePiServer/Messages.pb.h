// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Messages.proto

#ifndef PROTOBUF_Messages_2eproto__INCLUDED
#define PROTOBUF_Messages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_Messages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[2];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsRequestMessageImpl();
void InitDefaultsRequestMessage();
void InitDefaultsResponseMessageImpl();
void InitDefaultsResponseMessage();
inline void InitDefaults() {
  InitDefaultsRequestMessage();
  InitDefaultsResponseMessage();
}
}  // namespace protobuf_Messages_2eproto
class RequestMessage;
class RequestMessageDefaultTypeInternal;
extern RequestMessageDefaultTypeInternal _RequestMessage_default_instance_;
class ResponseMessage;
class ResponseMessageDefaultTypeInternal;
extern ResponseMessageDefaultTypeInternal _ResponseMessage_default_instance_;

enum RequestType {
  REQUEST_FRAME = 0,
  REQUEST_I2C = 1,
  REQUEST_EXIT = 2,
  REQUEST_UNKNOWN = 3,
  RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestType_IsValid(int value);
const RequestType RequestType_MIN = REQUEST_FRAME;
const RequestType RequestType_MAX = REQUEST_UNKNOWN;
const int RequestType_ARRAYSIZE = RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestType_descriptor();
inline const ::std::string& RequestType_Name(RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestType_descriptor(), value);
}
inline bool RequestType_Parse(
    const ::std::string& name, RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestType>(
    RequestType_descriptor(), name, value);
}
enum RequestCmd {
  CMD_FRAME_U8 = 0,
  CMD_FRAME_U16 = 1,
  CMD_I2C_FFC = 2,
  CMD_I2C_SENSOR_TEMPERATURE = 3,
  CMD_VOID = 4,
  RequestCmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestCmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestCmd_IsValid(int value);
const RequestCmd RequestCmd_MIN = CMD_FRAME_U8;
const RequestCmd RequestCmd_MAX = CMD_VOID;
const int RequestCmd_ARRAYSIZE = RequestCmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestCmd_descriptor();
inline const ::std::string& RequestCmd_Name(RequestCmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestCmd_descriptor(), value);
}
inline bool RequestCmd_Parse(
    const ::std::string& name, RequestCmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestCmd>(
    RequestCmd_descriptor(), name, value);
}
enum RequestStatus {
  STATUS_FRAME_READY = 0,
  STATUS_NO_FRAME = 1,
  STATUS_I2C_SUCCEDED = 2,
  STATUS_I2C_FAILED = 3,
  STATUS_RESEND = 4,
  RequestStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  RequestStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool RequestStatus_IsValid(int value);
const RequestStatus RequestStatus_MIN = STATUS_FRAME_READY;
const RequestStatus RequestStatus_MAX = STATUS_RESEND;
const int RequestStatus_ARRAYSIZE = RequestStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* RequestStatus_descriptor();
inline const ::std::string& RequestStatus_Name(RequestStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    RequestStatus_descriptor(), value);
}
inline bool RequestStatus_Parse(
    const ::std::string& name, RequestStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RequestStatus>(
    RequestStatus_descriptor(), name, value);
}
// ===================================================================

class RequestMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:RequestMessage) */ {
 public:
  RequestMessage();
  virtual ~RequestMessage();

  RequestMessage(const RequestMessage& from);

  inline RequestMessage& operator=(const RequestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RequestMessage(RequestMessage&& from) noexcept
    : RequestMessage() {
    *this = ::std::move(from);
  }

  inline RequestMessage& operator=(RequestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RequestMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RequestMessage* internal_default_instance() {
    return reinterpret_cast<const RequestMessage*>(
               &_RequestMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(RequestMessage* other);
  friend void swap(RequestMessage& a, RequestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RequestMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  RequestMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RequestMessage& from);
  void MergeFrom(const RequestMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .RequestType request_type = 1;
  void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  ::RequestType request_type() const;
  void set_request_type(::RequestType value);

  // .RequestCmd request_cmd = 2;
  void clear_request_cmd();
  static const int kRequestCmdFieldNumber = 2;
  ::RequestCmd request_cmd() const;
  void set_request_cmd(::RequestCmd value);

  // @@protoc_insertion_point(class_scope:RequestMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int request_type_;
  int request_cmd_;
  mutable int _cached_size_;
  friend struct ::protobuf_Messages_2eproto::TableStruct;
  friend void ::protobuf_Messages_2eproto::InitDefaultsRequestMessageImpl();
};
// -------------------------------------------------------------------

class ResponseMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ResponseMessage) */ {
 public:
  ResponseMessage();
  virtual ~ResponseMessage();

  ResponseMessage(const ResponseMessage& from);

  inline ResponseMessage& operator=(const ResponseMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ResponseMessage(ResponseMessage&& from) noexcept
    : ResponseMessage() {
    *this = ::std::move(from);
  }

  inline ResponseMessage& operator=(ResponseMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ResponseMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ResponseMessage* internal_default_instance() {
    return reinterpret_cast<const ResponseMessage*>(
               &_ResponseMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ResponseMessage* other);
  friend void swap(ResponseMessage& a, ResponseMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ResponseMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  ResponseMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResponseMessage& from);
  void MergeFrom(const ResponseMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResponseMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes frame = 7;
  void clear_frame();
  static const int kFrameFieldNumber = 7;
  const ::std::string& frame() const;
  void set_frame(const ::std::string& value);
  #if LANG_CXX11
  void set_frame(::std::string&& value);
  #endif
  void set_frame(const char* value);
  void set_frame(const void* value, size_t size);
  ::std::string* mutable_frame();
  ::std::string* release_frame();
  void set_allocated_frame(::std::string* frame);

  // .RequestType request_type = 1;
  void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  ::RequestType request_type() const;
  void set_request_type(::RequestType value);

  // .RequestStatus request_status = 2;
  void clear_request_status();
  static const int kRequestStatusFieldNumber = 2;
  ::RequestStatus request_status() const;
  void set_request_status(::RequestStatus value);

  // uint32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // uint32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // uint64 frame_id = 6;
  void clear_frame_id();
  static const int kFrameIdFieldNumber = 6;
  ::google::protobuf::uint64 frame_id() const;
  void set_frame_id(::google::protobuf::uint64 value);

  // double sensor_temperature = 8;
  void clear_sensor_temperature();
  static const int kSensorTemperatureFieldNumber = 8;
  double sensor_temperature() const;
  void set_sensor_temperature(double value);

  // uint32 bpp = 5;
  void clear_bpp();
  static const int kBppFieldNumber = 5;
  ::google::protobuf::uint32 bpp() const;
  void set_bpp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ResponseMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr frame_;
  int request_type_;
  int request_status_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint64 frame_id_;
  double sensor_temperature_;
  ::google::protobuf::uint32 bpp_;
  mutable int _cached_size_;
  friend struct ::protobuf_Messages_2eproto::TableStruct;
  friend void ::protobuf_Messages_2eproto::InitDefaultsResponseMessageImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RequestMessage

// .RequestType request_type = 1;
inline void RequestMessage::clear_request_type() {
  request_type_ = 0;
}
inline ::RequestType RequestMessage::request_type() const {
  // @@protoc_insertion_point(field_get:RequestMessage.request_type)
  return static_cast< ::RequestType >(request_type_);
}
inline void RequestMessage::set_request_type(::RequestType value) {
  
  request_type_ = value;
  // @@protoc_insertion_point(field_set:RequestMessage.request_type)
}

// .RequestCmd request_cmd = 2;
inline void RequestMessage::clear_request_cmd() {
  request_cmd_ = 0;
}
inline ::RequestCmd RequestMessage::request_cmd() const {
  // @@protoc_insertion_point(field_get:RequestMessage.request_cmd)
  return static_cast< ::RequestCmd >(request_cmd_);
}
inline void RequestMessage::set_request_cmd(::RequestCmd value) {
  
  request_cmd_ = value;
  // @@protoc_insertion_point(field_set:RequestMessage.request_cmd)
}

// -------------------------------------------------------------------

// ResponseMessage

// .RequestType request_type = 1;
inline void ResponseMessage::clear_request_type() {
  request_type_ = 0;
}
inline ::RequestType ResponseMessage::request_type() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.request_type)
  return static_cast< ::RequestType >(request_type_);
}
inline void ResponseMessage::set_request_type(::RequestType value) {
  
  request_type_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.request_type)
}

// .RequestStatus request_status = 2;
inline void ResponseMessage::clear_request_status() {
  request_status_ = 0;
}
inline ::RequestStatus ResponseMessage::request_status() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.request_status)
  return static_cast< ::RequestStatus >(request_status_);
}
inline void ResponseMessage::set_request_status(::RequestStatus value) {
  
  request_status_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.request_status)
}

// uint32 width = 3;
inline void ResponseMessage::clear_width() {
  width_ = 0u;
}
inline ::google::protobuf::uint32 ResponseMessage::width() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.width)
  return width_;
}
inline void ResponseMessage::set_width(::google::protobuf::uint32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.width)
}

// uint32 height = 4;
inline void ResponseMessage::clear_height() {
  height_ = 0u;
}
inline ::google::protobuf::uint32 ResponseMessage::height() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.height)
  return height_;
}
inline void ResponseMessage::set_height(::google::protobuf::uint32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.height)
}

// uint32 bpp = 5;
inline void ResponseMessage::clear_bpp() {
  bpp_ = 0u;
}
inline ::google::protobuf::uint32 ResponseMessage::bpp() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.bpp)
  return bpp_;
}
inline void ResponseMessage::set_bpp(::google::protobuf::uint32 value) {
  
  bpp_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.bpp)
}

// uint64 frame_id = 6;
inline void ResponseMessage::clear_frame_id() {
  frame_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ResponseMessage::frame_id() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.frame_id)
  return frame_id_;
}
inline void ResponseMessage::set_frame_id(::google::protobuf::uint64 value) {
  
  frame_id_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.frame_id)
}

// bytes frame = 7;
inline void ResponseMessage::clear_frame() {
  frame_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResponseMessage::frame() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.frame)
  return frame_.GetNoArena();
}
inline void ResponseMessage::set_frame(const ::std::string& value) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResponseMessage.frame)
}
#if LANG_CXX11
inline void ResponseMessage::set_frame(::std::string&& value) {
  
  frame_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ResponseMessage.frame)
}
#endif
inline void ResponseMessage::set_frame(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResponseMessage.frame)
}
inline void ResponseMessage::set_frame(const void* value, size_t size) {
  
  frame_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResponseMessage.frame)
}
inline ::std::string* ResponseMessage::mutable_frame() {
  
  // @@protoc_insertion_point(field_mutable:ResponseMessage.frame)
  return frame_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResponseMessage::release_frame() {
  // @@protoc_insertion_point(field_release:ResponseMessage.frame)
  
  return frame_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResponseMessage::set_allocated_frame(::std::string* frame) {
  if (frame != NULL) {
    
  } else {
    
  }
  frame_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), frame);
  // @@protoc_insertion_point(field_set_allocated:ResponseMessage.frame)
}

// double sensor_temperature = 8;
inline void ResponseMessage::clear_sensor_temperature() {
  sensor_temperature_ = 0;
}
inline double ResponseMessage::sensor_temperature() const {
  // @@protoc_insertion_point(field_get:ResponseMessage.sensor_temperature)
  return sensor_temperature_;
}
inline void ResponseMessage::set_sensor_temperature(double value) {
  
  sensor_temperature_ = value;
  // @@protoc_insertion_point(field_set:ResponseMessage.sensor_temperature)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RequestType>() {
  return ::RequestType_descriptor();
}
template <> struct is_proto_enum< ::RequestCmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RequestCmd>() {
  return ::RequestCmd_descriptor();
}
template <> struct is_proto_enum< ::RequestStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::RequestStatus>() {
  return ::RequestStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Messages_2eproto__INCLUDED
